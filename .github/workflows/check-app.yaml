# Workflow derived from https://github.com/rstudio/shinytest2/tree/main/actions/test-app/example-test-app-description.yaml
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, dev, ci]
  pull_request:
    branches: [main, dev, ci]

name: Test app w/ {renv}

jobs:
  test-app:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: release}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Setup R environment with renv
        uses: r-lib/actions/setup-renv@v2
        with:
				  profile: "shiny"
				  cache-version: 1
				  bypass-cache: false
				env:
				  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
				  R_KEEP_PKG_SOURCE: yes
				  RENV_PATHS_ROOT: /home/runner/work/_temp/renv
				  R_LIBS_USER: /home/runner/work/_temp/Library
				  TZ: UTC
				  _R_CHECK_SYSTEM_CLOCK_: FALSE
				  NOT_CRAN: true
				  RSPM: https://packagemanager.posit.co/cran/__linux__/jammy/latest
				  RENV_CONFIG_REPOS_OVERRIDE: https://packagemanager.posit.co/cran/__linux__/jammy/latest

			- name: Restore R environment cache
			  uses: actions/cache@v2
			  with:
				  path: /home/runner/work/_temp/renv
				  key: ${{ runner.os }}-R-${{ hashFiles('**/renv.lock') }}
				  restore-keys: ${{ runner.os }}-R-
				env:
				  cache-name: cache-R-env

			- name: Install packages from renv.lock
			  run: Rscript -e "renv::activate(); renv::restore()"
				
			- name: Install PhantomJS
				shell: Rscript {0}
				run: |
				  install.packages("webshot")
					webshot::install_phantomjs()
				  
			- name: Run tests
				run: R -e 'shinytest::testApp()'