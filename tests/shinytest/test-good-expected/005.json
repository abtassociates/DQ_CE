{
  "input": {
    "CEOutstandingReferrals": 14,
    "currentProviderList": "CE - CoC SSO",
    "dateRangeCount": [
      "2014-10-21",
      "2022-11-10"
    ],
    "DayShelterLongStayers": 90,
    "ESNbNLongStayers": 90,
    "fileStructureAnalysis_cell_clicked": {

    },
    "fileStructureAnalysis_cells_selected": [

    ],
    "fileStructureAnalysis_columns_selected": null,
    "fileStructureAnalysis_rows_all": 1,
    "fileStructureAnalysis_rows_current": 1,
    "fileStructureAnalysis_rows_selected": null,
    "fileStructureAnalysis_search": "",
    "fileStructureAnalysis_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "Go_to_upload": 1,
    "imported": {
      "name": [
        "HMIS CSV Export - Current Good.zip"
      ],
      "size": [
        1785003
      ],
      "type": [
        "application/zip"
      ],
      "datapath": [
        "0.zip"
      ]
    },
    "orgList": "Organization A",
    "OtherLongStayers": 90,
    "OUTLongStayers": 90,
    "pdde_guidance_summary_cell_clicked": {

    },
    "pdde_guidance_summary_cells_selected": [

    ],
    "pdde_guidance_summary_columns_selected": null,
    "pdde_guidance_summary_rows_all": [
      1,
      2,
      3,
      4,
      5,
      6
    ],
    "pdde_guidance_summary_rows_current": [
      1,
      2,
      3,
      4,
      5,
      6
    ],
    "pdde_guidance_summary_rows_selected": null,
    "pdde_guidance_summary_search": "",
    "pdde_guidance_summary_search_columns": [
      "",
      "",
      ""
    ],
    "pdde_guidance_summary_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "pdde_summary_table_cell_clicked": {

    },
    "pdde_summary_table_cells_selected": [

    ],
    "pdde_summary_table_columns_selected": null,
    "pdde_summary_table_rows_all": [
      1,
      2,
      3,
      4,
      5,
      6
    ],
    "pdde_summary_table_rows_current": [
      1,
      2,
      3,
      4,
      5,
      6
    ],
    "pdde_summary_table_rows_selected": null,
    "pdde_summary_table_search": "",
    "pdde_summary_table_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "providerDeskTime": "ES - Other",
    "ServicesOnlyLongStayers": 90,
    "sidebarCollapsed": false,
    "sidebarItemExpanded": "AssessDataQuality",
    "sidebarmenuid": "tabPDDE"
  },
  "output": {
    "clientCountData": [
      "'data' must be 2-dimensional (e.g. data frame or matrix)",
      "c(\"(function (data, options = list(), class = \\\"display\\\", callback = JS(\\\"return table;\\\"), \", \"    rownames, colnames, container, caption = NULL, filter = c(\\\"none\\\", \", \"        \\\"bottom\\\", \\\"top\\\"), escape = TRUE, style = \\\"auto\\\", width = NULL, \", \"    height = NULL, elementId = NULL, fillContainer = getOption(\\\"DT.fillContainer\\\", \", \"        NULL), autoHideNavigation = getOption(\\\"DT.autoHideNavigation\\\", \", \"        NULL), selection = c(\\\"multiple\\\", \\\"single\\\", \\\"none\\\"), extensions = list(), \", \n\"    plugins = NULL, editable = FALSE) \", \"{\", \"    oop = base::options(stringsAsFactors = FALSE)\", \"    on.exit(base::options(oop), add = TRUE)\", \"    options = modifyList(getOption(\\\"DT.options\\\", list()), if (is.function(options)) \", \"        options()\", \"    else options)\", \"    if (is.character(btnOpts <- options[[\\\"buttons\\\"]])) \", \"        options[[\\\"buttons\\\"]] = as.list(btnOpts)\", \"    params = list()\", \"    attr(params, \\\"TOJSON_ARGS\\\") = getOption(\\\"DT.TOJSON_ARGS\\\")\", \"    if (crosstalk::is.SharedData(data)) {\", \n\"        params$crosstalkOptions = list(key = data$key(), group = data$groupName())\", \"        data = data$data(withSelection = FALSE, withFilter = TRUE, \", \"            withKey = FALSE)\", \"    }\", \"    rn = if (missing(rownames) || isTRUE(rownames)) \", \"        base::rownames(data)\", \"    else {\", \"        if (is.character(rownames)) \", \"            rownames\", \"    }\", \"    hideDataTable = FALSE\", \"    if (is.null(data) || identical(ncol(data), 0L)) {\", \"        data = matrix(ncol = 0, nrow = NROW(data))\", \n\"        hideDataTable = TRUE\", \"    }\", \"    else if (length(dim(data)) != 2) {\", \"        str(data)\", \"        stop(\\\"'data' must be 2-dimensional (e.g. data frame or matrix)\\\")\", \"    }\", \"    if (is.data.frame(data)) {\", \"        data = as.data.frame(data)\", \"        numc = unname(which(vapply(data, is.numeric, logical(1))))\", \"    }\", \"    else {\", \"        if (!is.matrix(data)) \", \"            stop(\\\"'data' must be either a matrix or a data frame, and cannot be \\\", \", \"                classes(data), \\\" (you may need to coerce it to matrix or data frame)\\\")\", \n\"        numc = if (is.numeric(data)) \", \"            seq_len(ncol(data))\", \"        data = as.data.frame(data)\", \"    }\", \"    if (!is.null(rn)) {\", \"        data = cbind(` ` = rn, data)\", \"        numc = numc + 1\", \"    }\", \"    options[[\\\"columnDefs\\\"]] = colDefsTgtHandle(options[[\\\"columnDefs\\\"]], \", \"        base::colnames(data))\", \"    if (length(numc)) {\", \"        undefined_numc = setdiff(numc - 1, classNameDefinedColumns(options, \", \"            ncol(data)))\", \"        if (length(undefined_numc)) \", \n\"            options = appendColumnDefs(options, list(className = \\\"dt-right\\\", \", \"                targets = undefined_numc))\", \"    }\", \"    if (is.null(options[[\\\"order\\\"]])) \", \"        options$order = list()\", \"    if (is.null(options[[\\\"autoWidth\\\"]])) \", \"        options$autoWidth = FALSE\", \"    if (is.null(options[[\\\"orderClasses\\\"]])) \", \"        options$orderClasses = FALSE\", \"    cn = base::colnames(data)\", \"    if (missing(colnames)) {\", \"        colnames = cn\", \"    }\", \"    else if (!is.null(names(colnames))) {\", \n\"        i = convertIdx(colnames, cn)\", \"        cn[i] = names(colnames)\", \"        colnames = cn\", \"    }\", \"    if (ncol(data) - length(colnames) == 1) \", \"        colnames = c(\\\" \\\", colnames)\", \"    if (length(colnames) && colnames[1] == \\\" \\\") \", \"        options = appendColumnDefs(options, list(orderable = FALSE, \", \"            targets = 0))\", \"    style = normalizeStyle(style)\", \"    if (grepl(\\\"^bootstrap\\\", style)) \", \"        class = DT2BSClass(class)\", \"    if (style != \\\"default\\\") \", \n\"        params$style = style\", \"    if (isTRUE(fillContainer)) \", \"        class = paste(class, \\\"fill-container\\\")\", \"    if (is.character(filter)) \", \"        filter = list(position = match.arg(filter))\", \"    filter = modifyList(list(position = \\\"none\\\", clear = TRUE, \", \"        plain = FALSE, vertical = FALSE, opacity = 1), filter)\", \"    filterHTML = as.character(filterRow(data, !is.null(rn) && \", \"        colnames[1] == \\\" \\\", filter))\", \"    if (filter$position == \\\"top\\\") \", \"        options$orderCellsTop = TRUE\", \n\"    params$filter = filter$position\", \"    params$vertical = filter$vertical\", \"    if (filter$position != \\\"none\\\") \", \"        params$filterHTML = filterHTML\", \"    if (missing(container)) {\", \"        container = tags$table(tableHeader(colnames, escape), \", \"            class = class)\", \"    }\", \"    else {\", \"        params$class = class\", \"    }\", \"    attr(options, \\\"escapeIdx\\\") = escapeToConfig(escape, colnames)\", \"    if (is.list(extensions)) {\", \"        extensions = names(extensions)\", \n\"    }\", \"    else if (!is.character(extensions)) {\", \"        stop(\\\"'extensions' must be either a character vector or a named list\\\")\", \"    }\", \"    params$extensions = if (length(extensions)) \", \"        as.list(extensions)\", \"    if (\\\"Responsive\\\" %in% extensions && is.null(options$responsive)) {\", \"        options$responsive = TRUE\", \"    }\", \"    params$caption = captionString(caption)\", \"    if (isTRUE(editable)) \", \"        editable = \\\"cell\\\"\", \"    if (is.character(editable)) \", \"        editable = list(target = editable, disable = list(columns = NULL))\", \n\"    if (is.list(editable)) {\", \"        editable$numeric = makeEditableNumericField(editable$numeric, \", \"            data, rn)\", \"        editable$area = makeEditableAreaField(editable$area, \", \"            data, rn)\", \"        params$editable = editable\", \"    }\", \"    if (!identical(class(callback), class(JS(\\\"\\\")))) \", \"        stop(\\\"The 'callback' argument only accept a value returned from JS()\\\")\", \"    if (length(options$pageLength) && length(options$lengthMenu) == \", \"        0) {\", \"        if (!isFALSE(options$lengthChange)) \", \n\"            options$lengthMenu = sort(unique(c(options$pageLength, \", \"                10, 25, 50, 100)))\", \"        if (identical(options$lengthMenu, c(10, 25, 50, 100))) \", \"            options$lengthMenu = NULL\", \"    }\", \"    if (!is.null(options[[\\\"search\\\"]]) && !is.list(options[[\\\"search\\\"]])) \", \"        stop(\\\"The value of `search` in `options` must be NULL or a list\\\")\", \"    if (!is.null(fillContainer)) \", \"        params$fillContainer = fillContainer\", \"    if (!is.null(autoHideNavigation)) {\", \n\"        if (isTRUE(autoHideNavigation) && length(options$pageLength) == \", \"            0L) \", \"            warning(\\\"`autoHideNavigation` will be ignored if the `pageLength` option is not provided.\\\", \", \"                immediate. = TRUE)\", \"        params$autoHideNavigation = autoHideNavigation\", \"    }\", \"    params = structure(modifyList(params, list(data = data, container = as.character(container), \", \"        options = options, callback = if (!missing(callback)) JS(\\\"function(table) {\\\", \", \n\"            callback, \\\"}\\\"))), colnames = cn, rownames = length(rn) > \", \"        0)\", \"    if (inShiny() || length(params$crosstalkOptions)) {\", \"        if (is.character(selection)) {\", \"            selection = list(mode = match.arg(selection))\", \"        }\", \"        selection = modifyList(list(mode = \\\"multiple\\\", selected = NULL, \", \"            target = \\\"row\\\", selectable = NULL), selection, keep.null = TRUE)\", \"        if (grepl(\\\"^row\\\", selection$target) && is.character(selection$selected) && \", \n\"            length(rn)) {\", \"            selection$selected = match(selection$selected, rn)\", \"        }\", \"        params$selection = validateSelection(selection)\", \"        if (\\\"Select\\\" %in% extensions && selection$mode != \\\"none\\\") \", \"            warning(\\\"The Select extension can't work properly with DT's own \\\", \", \"                \\\"selection implemention and is only recommended in the client mode. \\\", \", \"                \\\"If you really want to use the Select extension please set \\\", \", \n\"                \\\"`selection = 'none'`\\\", immediate. = TRUE)\", \"    }\", \"    deps = DTDependencies(style)\", \"    deps = c(deps, unlist(lapply(extensions, extDependency, style, \", \"        options), recursive = FALSE))\", \"    if (params$filter != \\\"none\\\") \", \"        deps = c(deps, filterDependencies())\", \"    if (isTRUE(options$searchHighlight)) \", \"        deps = c(deps, list(pluginDependency(\\\"searchHighlight\\\")))\", \"    if (length(plugins)) \", \"        deps = c(deps, lapply(plugins, pluginDependency))\", \n\"    deps = c(deps, crosstalk::crosstalkLibs())\", \"    if (isTRUE(fillContainer)) {\", \"        width = NULL\", \"        height = NULL\", \"    }\", \"    htmlwidgets::createWidget(\\\"datatables\\\", if (hideDataTable) \", \"        NULL\", \"    else params, package = \\\"DT\\\", width = width, height = height, \", \"        elementId = elementId, sizingPolicy = htmlwidgets::sizingPolicy(knitr.figure = FALSE, \", \"            knitr.defaultWidth = \\\"100%\\\", knitr.defaultHeight = \\\"auto\\\"), \", \"        dependencies = deps, preRenderHook = function(instance) {\", \n\"            data = instance[[\\\"x\\\"]][[\\\"data\\\"]]\", \"            if (object.size(data) > 1500000 && getOption(\\\"DT.warn.size\\\", \", \"                TRUE)) \", \"                warning(\\\"It seems your data is too big for client-side DataTables. You may \\\", \", \"                  \\\"consider server-side processing: https://rstudio.github.io/DT/server.html\\\")\", \"            data = escapeData(data, escape, colnames)\", \"            data = unname(data)\", \"            instance$x$data = data\", \"            instance\", \n\"        })\", \"})(list(clientCountData = list(expr = client_count_data_df() %>% \", \"    filter(`Project Name` == input$currentProviderList) %>% select(all_of(clientCountDetailCols)), \", \"    env = <environment>)))\")",
      "NULL"
    ],
    "clientCountSummary": [
      "'data' must be 2-dimensional (e.g. data frame or matrix)",
      "c(\"(function (data, options = list(), class = \\\"display\\\", callback = JS(\\\"return table;\\\"), \", \"    rownames, colnames, container, caption = NULL, filter = c(\\\"none\\\", \", \"        \\\"bottom\\\", \\\"top\\\"), escape = TRUE, style = \\\"auto\\\", width = NULL, \", \"    height = NULL, elementId = NULL, fillContainer = getOption(\\\"DT.fillContainer\\\", \", \"        NULL), autoHideNavigation = getOption(\\\"DT.autoHideNavigation\\\", \", \"        NULL), selection = c(\\\"multiple\\\", \\\"single\\\", \\\"none\\\"), extensions = list(), \", \n\"    plugins = NULL, editable = FALSE) \", \"{\", \"    oop = base::options(stringsAsFactors = FALSE)\", \"    on.exit(base::options(oop), add = TRUE)\", \"    options = modifyList(getOption(\\\"DT.options\\\", list()), if (is.function(options)) \", \"        options()\", \"    else options)\", \"    if (is.character(btnOpts <- options[[\\\"buttons\\\"]])) \", \"        options[[\\\"buttons\\\"]] = as.list(btnOpts)\", \"    params = list()\", \"    attr(params, \\\"TOJSON_ARGS\\\") = getOption(\\\"DT.TOJSON_ARGS\\\")\", \"    if (crosstalk::is.SharedData(data)) {\", \n\"        params$crosstalkOptions = list(key = data$key(), group = data$groupName())\", \"        data = data$data(withSelection = FALSE, withFilter = TRUE, \", \"            withKey = FALSE)\", \"    }\", \"    rn = if (missing(rownames) || isTRUE(rownames)) \", \"        base::rownames(data)\", \"    else {\", \"        if (is.character(rownames)) \", \"            rownames\", \"    }\", \"    hideDataTable = FALSE\", \"    if (is.null(data) || identical(ncol(data), 0L)) {\", \"        data = matrix(ncol = 0, nrow = NROW(data))\", \n\"        hideDataTable = TRUE\", \"    }\", \"    else if (length(dim(data)) != 2) {\", \"        str(data)\", \"        stop(\\\"'data' must be 2-dimensional (e.g. data frame or matrix)\\\")\", \"    }\", \"    if (is.data.frame(data)) {\", \"        data = as.data.frame(data)\", \"        numc = unname(which(vapply(data, is.numeric, logical(1))))\", \"    }\", \"    else {\", \"        if (!is.matrix(data)) \", \"            stop(\\\"'data' must be either a matrix or a data frame, and cannot be \\\", \", \"                classes(data), \\\" (you may need to coerce it to matrix or data frame)\\\")\", \n\"        numc = if (is.numeric(data)) \", \"            seq_len(ncol(data))\", \"        data = as.data.frame(data)\", \"    }\", \"    if (!is.null(rn)) {\", \"        data = cbind(` ` = rn, data)\", \"        numc = numc + 1\", \"    }\", \"    options[[\\\"columnDefs\\\"]] = colDefsTgtHandle(options[[\\\"columnDefs\\\"]], \", \"        base::colnames(data))\", \"    if (length(numc)) {\", \"        undefined_numc = setdiff(numc - 1, classNameDefinedColumns(options, \", \"            ncol(data)))\", \"        if (length(undefined_numc)) \", \n\"            options = appendColumnDefs(options, list(className = \\\"dt-right\\\", \", \"                targets = undefined_numc))\", \"    }\", \"    if (is.null(options[[\\\"order\\\"]])) \", \"        options$order = list()\", \"    if (is.null(options[[\\\"autoWidth\\\"]])) \", \"        options$autoWidth = FALSE\", \"    if (is.null(options[[\\\"orderClasses\\\"]])) \", \"        options$orderClasses = FALSE\", \"    cn = base::colnames(data)\", \"    if (missing(colnames)) {\", \"        colnames = cn\", \"    }\", \"    else if (!is.null(names(colnames))) {\", \n\"        i = convertIdx(colnames, cn)\", \"        cn[i] = names(colnames)\", \"        colnames = cn\", \"    }\", \"    if (ncol(data) - length(colnames) == 1) \", \"        colnames = c(\\\" \\\", colnames)\", \"    if (length(colnames) && colnames[1] == \\\" \\\") \", \"        options = appendColumnDefs(options, list(orderable = FALSE, \", \"            targets = 0))\", \"    style = normalizeStyle(style)\", \"    if (grepl(\\\"^bootstrap\\\", style)) \", \"        class = DT2BSClass(class)\", \"    if (style != \\\"default\\\") \", \n\"        params$style = style\", \"    if (isTRUE(fillContainer)) \", \"        class = paste(class, \\\"fill-container\\\")\", \"    if (is.character(filter)) \", \"        filter = list(position = match.arg(filter))\", \"    filter = modifyList(list(position = \\\"none\\\", clear = TRUE, \", \"        plain = FALSE, vertical = FALSE, opacity = 1), filter)\", \"    filterHTML = as.character(filterRow(data, !is.null(rn) && \", \"        colnames[1] == \\\" \\\", filter))\", \"    if (filter$position == \\\"top\\\") \", \"        options$orderCellsTop = TRUE\", \n\"    params$filter = filter$position\", \"    params$vertical = filter$vertical\", \"    if (filter$position != \\\"none\\\") \", \"        params$filterHTML = filterHTML\", \"    if (missing(container)) {\", \"        container = tags$table(tableHeader(colnames, escape), \", \"            class = class)\", \"    }\", \"    else {\", \"        params$class = class\", \"    }\", \"    attr(options, \\\"escapeIdx\\\") = escapeToConfig(escape, colnames)\", \"    if (is.list(extensions)) {\", \"        extensions = names(extensions)\", \n\"    }\", \"    else if (!is.character(extensions)) {\", \"        stop(\\\"'extensions' must be either a character vector or a named list\\\")\", \"    }\", \"    params$extensions = if (length(extensions)) \", \"        as.list(extensions)\", \"    if (\\\"Responsive\\\" %in% extensions && is.null(options$responsive)) {\", \"        options$responsive = TRUE\", \"    }\", \"    params$caption = captionString(caption)\", \"    if (isTRUE(editable)) \", \"        editable = \\\"cell\\\"\", \"    if (is.character(editable)) \", \"        editable = list(target = editable, disable = list(columns = NULL))\", \n\"    if (is.list(editable)) {\", \"        editable$numeric = makeEditableNumericField(editable$numeric, \", \"            data, rn)\", \"        editable$area = makeEditableAreaField(editable$area, \", \"            data, rn)\", \"        params$editable = editable\", \"    }\", \"    if (!identical(class(callback), class(JS(\\\"\\\")))) \", \"        stop(\\\"The 'callback' argument only accept a value returned from JS()\\\")\", \"    if (length(options$pageLength) && length(options$lengthMenu) == \", \"        0) {\", \"        if (!isFALSE(options$lengthChange)) \", \n\"            options$lengthMenu = sort(unique(c(options$pageLength, \", \"                10, 25, 50, 100)))\", \"        if (identical(options$lengthMenu, c(10, 25, 50, 100))) \", \"            options$lengthMenu = NULL\", \"    }\", \"    if (!is.null(options[[\\\"search\\\"]]) && !is.list(options[[\\\"search\\\"]])) \", \"        stop(\\\"The value of `search` in `options` must be NULL or a list\\\")\", \"    if (!is.null(fillContainer)) \", \"        params$fillContainer = fillContainer\", \"    if (!is.null(autoHideNavigation)) {\", \n\"        if (isTRUE(autoHideNavigation) && length(options$pageLength) == \", \"            0L) \", \"            warning(\\\"`autoHideNavigation` will be ignored if the `pageLength` option is not provided.\\\", \", \"                immediate. = TRUE)\", \"        params$autoHideNavigation = autoHideNavigation\", \"    }\", \"    params = structure(modifyList(params, list(data = data, container = as.character(container), \", \"        options = options, callback = if (!missing(callback)) JS(\\\"function(table) {\\\", \", \n\"            callback, \\\"}\\\"))), colnames = cn, rownames = length(rn) > \", \"        0)\", \"    if (inShiny() || length(params$crosstalkOptions)) {\", \"        if (is.character(selection)) {\", \"            selection = list(mode = match.arg(selection))\", \"        }\", \"        selection = modifyList(list(mode = \\\"multiple\\\", selected = NULL, \", \"            target = \\\"row\\\", selectable = NULL), selection, keep.null = TRUE)\", \"        if (grepl(\\\"^row\\\", selection$target) && is.character(selection$selected) && \", \n\"            length(rn)) {\", \"            selection$selected = match(selection$selected, rn)\", \"        }\", \"        params$selection = validateSelection(selection)\", \"        if (\\\"Select\\\" %in% extensions && selection$mode != \\\"none\\\") \", \"            warning(\\\"The Select extension can't work properly with DT's own \\\", \", \"                \\\"selection implemention and is only recommended in the client mode. \\\", \", \"                \\\"If you really want to use the Select extension please set \\\", \", \n\"                \\\"`selection = 'none'`\\\", immediate. = TRUE)\", \"    }\", \"    deps = DTDependencies(style)\", \"    deps = c(deps, unlist(lapply(extensions, extDependency, style, \", \"        options), recursive = FALSE))\", \"    if (params$filter != \\\"none\\\") \", \"        deps = c(deps, filterDependencies())\", \"    if (isTRUE(options$searchHighlight)) \", \"        deps = c(deps, list(pluginDependency(\\\"searchHighlight\\\")))\", \"    if (length(plugins)) \", \"        deps = c(deps, lapply(plugins, pluginDependency))\", \n\"    deps = c(deps, crosstalk::crosstalkLibs())\", \"    if (isTRUE(fillContainer)) {\", \"        width = NULL\", \"        height = NULL\", \"    }\", \"    htmlwidgets::createWidget(\\\"datatables\\\", if (hideDataTable) \", \"        NULL\", \"    else params, package = \\\"DT\\\", width = width, height = height, \", \"        elementId = elementId, sizingPolicy = htmlwidgets::sizingPolicy(knitr.figure = FALSE, \", \"            knitr.defaultWidth = \\\"100%\\\", knitr.defaultHeight = \\\"auto\\\"), \", \"        dependencies = deps, preRenderHook = function(instance) {\", \n\"            data = instance[[\\\"x\\\"]][[\\\"data\\\"]]\", \"            if (object.size(data) > 1500000 && getOption(\\\"DT.warn.size\\\", \", \"                TRUE)) \", \"                warning(\\\"It seems your data is too big for client-side DataTables. You may \\\", \", \"                  \\\"consider server-side processing: https://rstudio.github.io/DT/server.html\\\")\", \"            data = escapeData(data, escape, colnames)\", \"            data = unname(data)\", \"            instance$x$data = data\", \"            instance\", \n\"        })\", \"})(list(clientCountData = list(expr = client_count_data_df() %>% \", \"    filter(`Project Name` == input$currentProviderList) %>% select(all_of(clientCountDetailCols)), \", \"    env = <environment>), clientCountSummary = list(expr = client_count_summary_df(), \", \"    env = <environment>)))\")",
      "NULL"
    ],
    "downloadClientCountsReportButton": {
      "html": "<a id=\"downloadClientCountsReport\" class=\"btn btn-default shiny-download-link \" href=\"\" target=\"_blank\" download>\n  <i class=\"fas fa-download\" role=\"presentation\" aria-label=\"download icon\"><\/i>\n  Download System-Wide\n<\/a>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "6.2.0",
          "src": {
            "href": "font-awesome-6.2.0"
          },
          "meta": null,
          "script": null,
          "stylesheet": [
            "css/all.min.css",
            "css/v4-shims.min.css"
          ],
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "downloadFileStructureAnalysisBtn": {
      "html": "<a id=\"downloadFileStructureAnalysis\" class=\"btn btn-default shiny-download-link \" href=\"\" target=\"_blank\" download>\n  <i class=\"fas fa-download\" role=\"presentation\" aria-label=\"download icon\"><\/i>\n  Download Structure Analysis Detail\n<\/a>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "6.2.0",
          "src": {
            "href": "font-awesome-6.2.0"
          },
          "meta": null,
          "script": null,
          "stylesheet": [
            "css/all.min.css",
            "css/v4-shims.min.css"
          ],
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "downloadPDDEReportButton": {
      "html": "<a id=\"downloadPDDEReport\" class=\"btn btn-default shiny-download-link \" href=\"\" target=\"_blank\" download>\n  <i class=\"fas fa-download\" role=\"presentation\" aria-label=\"download icon\"><\/i>\n  Download\n<\/a>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "6.2.0",
          "src": {
            "href": "font-awesome-6.2.0"
          },
          "meta": null,
          "script": null,
          "stylesheet": [
            "css/all.min.css",
            "css/v4-shims.min.css"
          ],
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "fileInfo": {
      "html": "<p>You have successfully uploaded your hashed HMIS CSV Export!<\/p>",
      "deps": [

      ]
    },
    "fileStructureAnalysis": {
      "x": {
        "filter": "none",
        "vertical": false,
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>Type<\/th>\n      <th>Issue<\/th>\n      <th>Count<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "dom": "t",
          "columnDefs": [
            {
              "className": "dt-right",
              "targets": 2
            }
          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "headerClientCounts": {
      "html": "<h2>Client Counts Report<\/h2>\n<h4>\n  <strong>Date Range of Current File: <\/strong>\n  10-21-2014 to 11-10-2022\n<\/h4>\n<div id=\"oute1fbbef2d894d83a\" class=\"shiny-html-output\"><\/div>",
      "deps": [

      ]
    },
    "headerPDDE": {
      "html": "<h2>Project Descriptor Data Elements Checker<\/h2>\n<h4>\n  <strong>Date Range of Current File: <\/strong>\n  10-21-2014 to 11-10-2022\n<\/h4>",
      "deps": [

      ]
    },
    "headerUpload": {
      "html": "<h2>Upload HMIS CSV Export<\/h2>\n<h4>\n  <strong>Date Range of Current File: <\/strong>\n  10-21-2014 to 11-10-2022\n<\/h4>\n<h4>\n  <strong>Export Date: <\/strong>\n  11-10-2022 at 05:04 PM\n<\/h4>",
      "deps": [

      ]
    },
    "oute1fbbef2d894d83a": {
      "html": "<h4>Organization A | CE - CoC SSO<\/h4>",
      "deps": [

      ]
    },
    "pdde_guidance_summary": {
      "x": {
        "filter": "top",
        "vertical": false,
        "filterHTML": "<tr>\n  <td data-type=\"factor\" style=\"vertical-align: top;\">\n    <div class=\"form-group has-feedback\" style=\"margin-bottom: auto;\">\n      <input type=\"search\" placeholder=\"All\" class=\"form-control\" style=\"width: 100%;\"/>\n      <span class=\"glyphicon glyphicon-remove-circle form-control-feedback\"><\/span>\n    <\/div>\n    <div style=\"width: 100%; display: none;\">\n      <select multiple=\"multiple\" style=\"width: 100%;\" data-options=\"[&quot;Error&quot;,&quot;Warning&quot;]\"><\/select>\n    <\/div>\n  <\/td>\n  <td data-type=\"character\" style=\"vertical-align: top;\">\n    <div class=\"form-group has-feedback\" style=\"margin-bottom: auto;\">\n      <input type=\"search\" placeholder=\"All\" class=\"form-control\" style=\"width: 100%;\"/>\n      <span class=\"glyphicon glyphicon-remove-circle form-control-feedback\"><\/span>\n    <\/div>\n  <\/td>\n  <td data-type=\"character\" style=\"vertical-align: top;\">\n    <div class=\"form-group has-feedback\" style=\"margin-bottom: auto;\">\n      <input type=\"search\" placeholder=\"All\" class=\"form-control\" style=\"width: 100%;\"/>\n      <span class=\"glyphicon glyphicon-remove-circle form-control-feedback\"><\/span>\n    <\/div>\n  <\/td>\n<\/tr>",
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>Type<\/th>\n      <th>Issue<\/th>\n      <th>Guidance<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "dom": "ltpi",
          "columnDefs": [

          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "orderCellsTop": true,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = false;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "nouislider",
          "version": "7.0.10",
          "src": {
            "href": "nouislider-7.0.10"
          },
          "meta": null,
          "script": "jquery.nouislider.min.js",
          "stylesheet": "jquery.nouislider.min.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "selectize",
          "version": "0.12.0",
          "src": {
            "href": "selectize-0.12.0"
          },
          "meta": null,
          "script": "selectize.min.js",
          "stylesheet": "selectize.bootstrap3.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "pdde_summary_table": {
      "x": {
        "filter": "none",
        "vertical": false,
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>Issue<\/th>\n      <th>Type<\/th>\n      <th>Count<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "dom": "t",
          "columnDefs": [
            {
              "className": "dt-right",
              "targets": 2
            }
          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    }
  },
  "export": {
    "clientCountData": {
      "Personal ID": [
        "1",
        "3",
        "4",
        "5",
        "6",
        "8",
        "9",
        "10",
        "11",
        "12",
        "14",
        "16",
        "17",
        "18",
        "19",
        "20",
        "28",
        "29",
        "31",
        "33",
        "26",
        "34",
        "36",
        "37",
        "40",
        "1",
        "42",
        "29",
        "40",
        "49",
        "13",
        "56",
        "47",
        "22",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "68",
        "70",
        "82",
        "8",
        "23",
        "16",
        "86",
        "87",
        "89",
        "91",
        "92",
        "88",
        "80",
        "97",
        "98",
        "96",
        "46",
        "101",
        "102",
        "57",
        "35",
        "41",
        "104",
        "105",
        "106",
        "108",
        "83",
        "109",
        "99",
        "111",
        "113",
        "29",
        "114",
        "110",
        "115",
        "117",
        "118",
        "120",
        "30",
        "123",
        "75",
        "125",
        "71",
        "127",
        "130",
        "131",
        "9",
        "134",
        "135",
        "140",
        "139",
        "142",
        "143",
        "144",
        "95",
        "146",
        "3",
        "7",
        "12",
        "147",
        "148",
        "149",
        "45",
        "61",
        "33",
        "152",
        "27",
        "104",
        "77",
        "154",
        "83",
        "155",
        "4",
        "156",
        "39",
        "73",
        "128",
        "159",
        "160",
        "147",
        "161",
        "97",
        "145",
        "104",
        "162",
        "154",
        "163",
        "164",
        "166",
        "76",
        "24",
        "21",
        "170",
        "71",
        "81",
        "58",
        "137",
        "174",
        "75",
        "132",
        "175",
        "178",
        "167",
        "168",
        "169",
        "127",
        "180",
        "172",
        "181",
        "182",
        "187",
        "188",
        "189",
        "160",
        "157",
        "190",
        "185",
        "176",
        "193",
        "198",
        "54",
        "11",
        "199",
        "44",
        "172",
        "181",
        "272",
        "293",
        "305",
        "289",
        "190",
        "322",
        "73",
        "211",
        "256",
        "95",
        "134",
        "41",
        "47",
        "333",
        "347",
        "344",
        "265",
        "350",
        "280",
        "261",
        "353",
        "107",
        "35",
        "120",
        "329",
        "330",
        "331",
        "274",
        "336",
        "365",
        "240",
        "365",
        "12",
        "171",
        "212",
        "287",
        "371",
        "334",
        "377",
        "247",
        "154",
        "122",
        "364",
        "252",
        "208",
        "349",
        "275",
        "298",
        "367",
        "295",
        "338",
        "161",
        "319",
        "405",
        "396",
        "409",
        "55",
        "260",
        "411",
        "250",
        "205",
        "124",
        "394",
        "413",
        "158",
        "74",
        "15",
        "203",
        "271",
        "294",
        "401",
        "115",
        "30",
        "41",
        "180",
        "43",
        "209",
        "73",
        "264",
        "232",
        "6",
        "427",
        "150",
        "116",
        "288",
        "107",
        "31",
        "82",
        "222",
        "61",
        "200",
        "404",
        "404",
        "387",
        "239",
        "323",
        "433",
        "440",
        "219",
        "296",
        "445",
        "166",
        "445",
        "261",
        "274",
        "336",
        "141",
        "241",
        "220",
        "238",
        "148",
        "59",
        "270",
        "365",
        "285",
        "240",
        "335",
        "333",
        "372",
        "163",
        "460",
        "242",
        "242",
        "463",
        "40",
        "434",
        "373",
        "317",
        "26",
        "320",
        "8",
        "402",
        "18",
        "237",
        "257",
        "258",
        "302",
        "85",
        "287",
        "71",
        "279",
        "481",
        "483",
        "431",
        "187",
        "122",
        "70",
        "38",
        "332",
        "213",
        "15",
        "495",
        "65",
        "66",
        "67",
        "68",
        "120",
        "306",
        "498",
        "499",
        "500",
        "501",
        "192",
        "79",
        "502",
        "74",
        "186",
        "259",
        "81",
        "14",
        "3",
        "506",
        "507",
        "508",
        "282",
        "523",
        "526",
        "29",
        "505",
        "529",
        "45",
        "424",
        "322",
        "256",
        "446",
        "88",
        "531",
        "385",
        "539",
        "538",
        "534",
        "537",
        "419",
        "314",
        "535",
        "541",
        "388",
        "320",
        "103",
        "388",
        "148",
        "82",
        "220",
        "333",
        "545",
        "433",
        "325",
        "544",
        "52",
        "469",
        "145",
        "193",
        "551",
        "55",
        "123",
        "550",
        "556",
        "557",
        "146",
        "431",
        "70",
        "553",
        "122",
        "232",
        "530",
        "562",
        "563",
        "564",
        "565",
        "558",
        "554",
        "566",
        "567",
        "568",
        "370",
        "571",
        "572",
        "573",
        "574",
        "570",
        "80",
        "205",
        "219",
        "40",
        "15",
        "16",
        "13",
        "560",
        "87",
        "83",
        "583",
        "315",
        "32",
        "74",
        "176",
        "138",
        "470",
        "234",
        "408",
        "124",
        "243",
        "297",
        "250",
        "306",
        "404",
        "592",
        "593",
        "594",
        "595",
        "596",
        "598",
        "523",
        "166",
        "599",
        "10",
        "25",
        "546",
        "602",
        "228",
        "121",
        "280",
        "610",
        "284",
        "147",
        "296",
        "38",
        "625",
        "626",
        "136",
        "256",
        "189",
        "267",
        "268",
        "269",
        "461",
        "130",
        "590",
        "582",
        "628",
        "270",
        "287",
        "178",
        "228",
        "569",
        "88",
        "481",
        "220",
        "333",
        "630",
        "635",
        "636",
        "637",
        "638",
        "639",
        "640",
        "641",
        "193",
        "642",
        "167",
        "168",
        "169",
        "231",
        "431",
        "113",
        "210",
        "164",
        "657",
        "161",
        "616",
        "617",
        "618",
        "619",
        "620",
        "227",
        "469",
        "259",
        "294",
        "148",
        "295",
        "444",
        "470",
        "85",
        "42",
        "652",
        "370",
        "36",
        "530",
        "137",
        "659",
        "634",
        "71",
        "94",
        "104",
        "40",
        "5",
        "663",
        "662",
        "260",
        "661",
        "132",
        "229",
        "306",
        "7",
        "523",
        "32",
        "217",
        "102",
        "665",
        "205",
        "45",
        "531",
        "218",
        "253",
        "86",
        "227",
        "513",
        "4",
        "671",
        "290",
        "575",
        "623",
        "571",
        "572",
        "573",
        "574",
        "238",
        "571",
        "496",
        "126",
        "377",
        "289",
        "672",
        "598",
        "576",
        "433",
        "472",
        "473",
        "474",
        "475",
        "533",
        "302",
        "154",
        "320",
        "54",
        "296",
        "81",
        "684",
        "538",
        "250",
        "286",
        "233",
        "213",
        "82",
        "688",
        "689",
        "690",
        "691",
        "692",
        "333",
        "558",
        "693",
        "630",
        "39",
        "112",
        "685",
        "220",
        "699",
        "701",
        "97",
        "551",
        "136",
        "193",
        "374",
        "622",
        "153",
        "148",
        "191",
        "276",
        "707",
        "485",
        "709",
        "710",
        "711",
        "13",
        "173",
        "17",
        "714",
        "639",
        "41",
        "715",
        "712",
        "716",
        "592",
        "593",
        "594",
        "595",
        "189",
        "147",
        "633",
        "398",
        "42",
        "716",
        "719",
        "77",
        "10",
        "33",
        "135",
        "722",
        "57",
        "702",
        "164",
        "375",
        "431",
        "423",
        "670",
        "725",
        "724",
        "728",
        "663",
        "729",
        "160",
        "521",
        "54",
        "732",
        "577",
        "684",
        "50",
        "735",
        "731",
        "726",
        "730",
        "580",
        "277",
        "433",
        "472",
        "473",
        "474",
        "475",
        "533",
        "740",
        "250",
        "727",
        "367",
        "152",
        "333",
        "139",
        "71",
        "154",
        "81",
        "744",
        "39",
        "15",
        "311",
        "313",
        "753",
        "162",
        "297",
        "752",
        "40",
        "193",
        "365",
        "538",
        "741",
        "758",
        "760",
        "286",
        "170",
        "94",
        "205",
        "219",
        "765",
        "78",
        "26",
        "764",
        "7",
        "36",
        "327",
        "47",
        "276",
        "742",
        "86",
        "329",
        "338",
        "374",
        "702",
        "778",
        "704",
        "42",
        "767",
        "260",
        "754",
        "774",
        "238",
        "166",
        "175",
        "421",
        "287",
        "786",
        "153",
        "784",
        "44",
        "35",
        "165",
        "99",
        "788",
        "789",
        "49",
        "294",
        "104",
        "665",
        "714",
        "10",
        "787",
        "58",
        "237",
        "257",
        "258",
        "766",
        "523",
        "375",
        "13",
        "328",
        "671",
        "280",
        "57",
        "316",
        "810",
        "111",
        "812",
        "25",
        "433",
        "472",
        "473",
        "474",
        "475",
        "533",
        "56",
        "413",
        "485",
        "152",
        "816",
        "38",
        "182",
        "146",
        "54",
        "661",
        "826",
        "822",
        "154",
        "830",
        "736",
        "663",
        "724",
        "832",
        "147",
        "40",
        "813",
        "333",
        "828",
        "834",
        "148",
        "803",
        "219",
        "220",
        "320",
        "808",
        "409",
        "113"
      ],
      "Relationship to Head of Household": [
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Data not collected (please correct)",
        "Data not collected (please correct)",
        "Data not collected (please correct)",
        "Data not collected (please correct)",
        "Data not collected (please correct)",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Data not collected (please correct)",
        "Data not collected (please correct)",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Data not collected (please correct)",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Data not collected (please correct)",
        "Data not collected (please correct)",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Data not collected (please correct)",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Data not collected (please correct)",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Spouse or Partner",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Child",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Child",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Spouse or Partner",
        "Child",
        "Child",
        "Child",
        "Child",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Head of Household",
        "Child",
        "Head of Household",
        "Head of Household"
      ],
      "Entry Date": [
        "2014-10-21",
        "2014-10-28",
        "2014-10-31",
        "2014-11-19",
        "2014-12-01",
        "2014-12-11",
        "2015-01-20",
        "2015-01-28",
        "2015-03-13",
        "2015-03-18",
        "2015-04-03",
        "2015-04-20",
        "2015-04-27",
        "2015-05-01",
        "2015-05-05",
        "2015-06-03",
        "2015-08-12",
        "2015-08-13",
        "2015-08-18",
        "2015-08-27",
        "2015-08-28",
        "2015-09-17",
        "2015-09-24",
        "2015-10-29",
        "2015-12-21",
        "2016-01-04",
        "2016-01-15",
        "2016-02-22",
        "2016-02-23",
        "2016-03-03",
        "2016-03-17",
        "2016-05-11",
        "2016-05-18",
        "2016-06-30",
        "2016-07-18",
        "2016-07-18",
        "2016-07-18",
        "2016-07-22",
        "2016-07-22",
        "2016-07-22",
        "2016-07-22",
        "2016-08-02",
        "2017-01-06",
        "2017-01-10",
        "2017-01-13",
        "2017-01-31",
        "2017-02-08",
        "2017-02-10",
        "2017-02-22",
        "2017-03-08",
        "2017-03-08",
        "2017-03-10",
        "2017-04-06",
        "2017-04-07",
        "2017-04-14",
        "2017-04-26",
        "2017-05-11",
        "2017-05-12",
        "2017-05-12",
        "2017-05-23",
        "2017-05-31",
        "2017-06-06",
        "2017-06-13",
        "2017-06-13",
        "2017-06-13",
        "2017-06-22",
        "2017-06-22",
        "2017-06-29",
        "2017-07-14",
        "2017-07-19",
        "2017-07-23",
        "2017-07-23",
        "2017-07-26",
        "2017-07-31",
        "2017-08-02",
        "2017-08-02",
        "2017-08-08",
        "2017-08-17",
        "2017-08-29",
        "2017-09-06",
        "2017-09-08",
        "2017-09-15",
        "2017-09-28",
        "2017-10-03",
        "2017-10-12",
        "2017-10-12",
        "2017-10-25",
        "2017-10-27",
        "2017-11-01",
        "2017-11-08",
        "2017-11-08",
        "2017-11-29",
        "2017-11-29",
        "2017-11-29",
        "2017-12-01",
        "2017-12-06",
        "2017-12-14",
        "2017-12-20",
        "2017-12-26",
        "2017-12-27",
        "2017-12-29",
        "2018-01-09",
        "2018-01-09",
        "2018-01-12",
        "2018-01-16",
        "2018-01-18",
        "2018-01-22",
        "2018-01-22",
        "2018-01-29",
        "2018-01-31",
        "2018-01-31",
        "2018-02-01",
        "2018-02-01",
        "2018-02-02",
        "2018-02-05",
        "2018-02-08",
        "2018-02-20",
        "2018-02-22",
        "2018-02-28",
        "2018-03-01",
        "2018-03-05",
        "2018-03-06",
        "2018-03-07",
        "2018-03-08",
        "2018-03-19",
        "2018-03-21",
        "2018-03-28",
        "2018-03-29",
        "2018-04-12",
        "2018-04-19",
        "2018-05-08",
        "2018-05-15",
        "2018-05-24",
        "2018-05-25",
        "2018-06-06",
        "2018-06-08",
        "2018-06-11",
        "2018-06-21",
        "2018-06-25",
        "2018-06-29",
        "2018-07-05",
        "2018-07-12",
        "2018-07-13",
        "2018-07-13",
        "2018-07-13",
        "2018-07-17",
        "2018-07-20",
        "2018-08-07",
        "2018-08-07",
        "2018-08-09",
        "2018-08-28",
        "2018-08-28",
        "2018-09-10",
        "2018-09-12",
        "2018-09-12",
        "2018-09-27",
        "2018-10-04",
        "2018-10-08",
        "2018-10-25",
        "2018-11-09",
        "2018-11-13",
        "2018-11-23",
        "2018-11-23",
        "2018-12-04",
        "2018-12-06",
        "2018-12-06",
        "2020-03-19",
        "2020-05-22",
        "2020-07-08",
        "2020-09-22",
        "2020-09-28",
        "2020-09-29",
        "2020-09-29",
        "2020-09-30",
        "2020-10-01",
        "2020-10-01",
        "2020-10-05",
        "2020-10-06",
        "2020-10-06",
        "2020-10-06",
        "2020-10-12",
        "2020-10-12",
        "2020-10-14",
        "2020-10-14",
        "2020-10-15",
        "2020-10-21",
        "2020-10-21",
        "2020-10-23",
        "2020-10-26",
        "2020-10-30",
        "2020-11-02",
        "2020-11-02",
        "2020-11-02",
        "2020-11-06",
        "2020-11-06",
        "2020-11-09",
        "2020-11-10",
        "2020-11-10",
        "2020-11-11",
        "2020-11-11",
        "2020-11-11",
        "2020-11-12",
        "2020-11-12",
        "2020-11-19",
        "2020-11-23",
        "2020-11-25",
        "2020-11-30",
        "2020-12-01",
        "2020-12-03",
        "2020-12-04",
        "2020-12-04",
        "2020-12-07",
        "2020-12-08",
        "2020-12-09",
        "2020-12-10",
        "2020-12-15",
        "2020-12-22",
        "2020-12-24",
        "2021-01-04",
        "2021-01-06",
        "2021-01-08",
        "2021-01-10",
        "2021-01-10",
        "2021-01-11",
        "2021-01-11",
        "2021-01-13",
        "2021-01-13",
        "2021-01-13",
        "2021-01-13",
        "2021-01-13",
        "2021-01-14",
        "2021-01-15",
        "2021-01-18",
        "2021-01-19",
        "2021-01-19",
        "2021-01-20",
        "2021-01-22",
        "2021-01-26",
        "2021-01-26",
        "2021-01-27",
        "2021-01-27",
        "2021-01-28",
        "2021-01-28",
        "2021-01-28",
        "2021-01-29",
        "2021-02-01",
        "2021-02-01",
        "2021-02-01",
        "2021-02-02",
        "2021-02-04",
        "2021-02-04",
        "2021-02-05",
        "2021-02-05",
        "2021-02-06",
        "2021-02-06",
        "2021-02-08",
        "2021-02-10",
        "2021-02-10",
        "2021-02-10",
        "2021-02-11",
        "2021-02-12",
        "2021-02-12",
        "2021-02-12",
        "2021-02-19",
        "2021-02-19",
        "2021-02-19",
        "2021-02-24",
        "2021-02-24",
        "2021-02-24",
        "2021-02-25",
        "2021-02-25",
        "2021-02-25",
        "2021-02-25",
        "2021-02-26",
        "2021-02-26",
        "2021-02-26",
        "2021-02-26",
        "2021-02-26",
        "2021-03-01",
        "2021-03-05",
        "2021-03-05",
        "2021-03-05",
        "2021-03-08",
        "2021-03-10",
        "2021-03-10",
        "2021-03-10",
        "2021-03-11",
        "2021-03-11",
        "2021-03-11",
        "2021-03-11",
        "2021-03-12",
        "2021-03-13",
        "2021-03-15",
        "2021-03-15",
        "2021-03-16",
        "2021-03-17",
        "2021-03-17",
        "2021-03-17",
        "2021-03-18",
        "2021-03-22",
        "2021-03-22",
        "2021-03-22",
        "2021-03-23",
        "2021-03-24",
        "2021-03-25",
        "2021-03-30",
        "2021-04-01",
        "2021-04-02",
        "2021-04-09",
        "2021-04-10",
        "2021-04-12",
        "2021-04-12",
        "2021-04-13",
        "2021-04-20",
        "2021-04-22",
        "2021-04-23",
        "2021-04-23",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-27",
        "2021-04-28",
        "2021-04-28",
        "2021-04-28",
        "2021-04-29",
        "2021-05-01",
        "2021-05-03",
        "2021-05-04",
        "2021-05-05",
        "2021-05-05",
        "2021-05-12",
        "2021-05-18",
        "2021-05-19",
        "2021-05-19",
        "2021-05-19",
        "2021-05-19",
        "2021-05-19",
        "2021-05-20",
        "2021-05-20",
        "2021-05-21",
        "2021-05-26",
        "2021-05-27",
        "2021-05-27",
        "2021-06-01",
        "2021-06-02",
        "2021-06-02",
        "2021-06-08",
        "2021-06-08",
        "2021-06-09",
        "2021-06-14",
        "2021-06-14",
        "2021-06-15",
        "2021-06-16",
        "2021-06-17",
        "2021-06-21",
        "2021-06-22",
        "2021-06-22",
        "2021-06-23",
        "2021-06-23",
        "2021-06-24",
        "2021-06-24",
        "2021-06-24",
        "2021-06-25",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-30",
        "2021-07-01",
        "2021-07-01",
        "2021-07-02",
        "2021-07-06",
        "2021-07-06",
        "2021-07-07",
        "2021-07-07",
        "2021-07-08",
        "2021-07-09",
        "2021-07-09",
        "2021-07-10",
        "2021-07-12",
        "2021-07-12",
        "2021-07-13",
        "2021-07-13",
        "2021-07-13",
        "2021-07-13",
        "2021-07-14",
        "2021-07-14",
        "2021-07-14",
        "2021-07-14",
        "2021-07-15",
        "2021-07-15",
        "2021-07-15",
        "2021-07-15",
        "2021-07-19",
        "2021-07-19",
        "2021-07-19",
        "2021-07-19",
        "2021-07-19",
        "2021-07-20",
        "2021-07-21",
        "2021-07-22",
        "2021-07-22",
        "2021-07-22",
        "2021-07-23",
        "2021-07-26",
        "2021-07-26",
        "2021-07-26",
        "2021-07-26",
        "2021-07-30",
        "2021-07-30",
        "2021-07-30",
        "2021-07-31",
        "2021-08-03",
        "2021-08-04",
        "2021-08-05",
        "2021-08-05",
        "2021-08-05",
        "2021-08-05",
        "2021-08-06",
        "2021-08-06",
        "2021-08-10",
        "2021-08-13",
        "2021-08-13",
        "2021-08-13",
        "2021-08-14",
        "2021-08-14",
        "2021-08-14",
        "2021-08-14",
        "2021-08-14",
        "2021-08-16",
        "2021-08-18",
        "2021-08-18",
        "2021-08-19",
        "2021-08-20",
        "2021-08-21",
        "2021-08-21",
        "2021-08-23",
        "2021-08-24",
        "2021-08-24",
        "2021-08-30",
        "2021-08-31",
        "2021-09-03",
        "2021-09-04",
        "2021-09-06",
        "2021-09-08",
        "2021-09-09",
        "2021-09-09",
        "2021-09-09",
        "2021-09-10",
        "2021-09-12",
        "2021-09-16",
        "2021-09-16",
        "2021-09-16",
        "2021-09-17",
        "2021-09-17",
        "2021-09-17",
        "2021-09-20",
        "2021-09-21",
        "2021-09-21",
        "2021-09-22",
        "2021-09-22",
        "2021-09-24",
        "2021-09-24",
        "2021-09-24",
        "2021-09-24",
        "2021-09-28",
        "2021-09-28",
        "2021-09-30",
        "2021-09-30",
        "2021-09-30",
        "2021-09-30",
        "2021-10-04",
        "2021-10-04",
        "2021-10-05",
        "2021-10-06",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-08",
        "2021-10-11",
        "2021-10-11",
        "2021-10-12",
        "2021-10-14",
        "2021-10-15",
        "2021-10-15",
        "2021-10-15",
        "2021-10-15",
        "2021-10-15",
        "2021-10-15",
        "2021-10-17",
        "2021-10-17",
        "2021-10-18",
        "2021-10-19",
        "2021-10-20",
        "2021-10-20",
        "2021-10-20",
        "2021-10-20",
        "2021-10-25",
        "2021-10-26",
        "2021-10-26",
        "2021-10-27",
        "2021-10-28",
        "2021-10-28",
        "2021-10-29",
        "2021-10-29",
        "2021-10-30",
        "2021-11-01",
        "2021-11-01",
        "2021-11-02",
        "2021-11-02",
        "2021-11-05",
        "2021-11-08",
        "2021-11-08",
        "2021-11-09",
        "2021-11-10",
        "2021-11-10",
        "2021-11-11",
        "2021-11-12",
        "2021-11-15",
        "2021-11-16",
        "2021-11-17",
        "2021-11-17",
        "2021-11-18",
        "2021-11-19",
        "2021-11-21",
        "2021-11-22",
        "2021-11-22",
        "2021-11-23",
        "2021-11-23",
        "2021-11-23",
        "2021-11-23",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-12-01",
        "2021-12-01",
        "2021-12-02",
        "2021-12-03",
        "2021-12-03",
        "2021-12-06",
        "2021-12-06",
        "2021-12-06",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-08",
        "2021-12-10",
        "2021-12-10",
        "2021-12-13",
        "2021-12-15",
        "2021-12-16",
        "2021-12-16",
        "2021-12-20",
        "2021-12-20",
        "2021-12-20",
        "2021-12-20",
        "2021-12-20",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-27",
        "2021-12-27",
        "2021-12-27",
        "2021-12-29",
        "2021-12-29",
        "2021-12-29",
        "2021-12-29",
        "2021-12-30",
        "2022-01-05",
        "2022-01-06",
        "2022-01-07",
        "2022-01-11",
        "2022-01-11",
        "2022-01-11",
        "2022-01-11",
        "2022-01-13",
        "2022-01-14",
        "2022-01-18",
        "2022-01-18",
        "2022-01-18",
        "2022-01-21",
        "2022-01-22",
        "2022-01-26",
        "2022-01-26",
        "2022-01-26",
        "2022-01-27",
        "2022-01-27",
        "2022-01-28",
        "2022-01-31",
        "2022-01-31",
        "2022-02-01",
        "2022-02-01",
        "2022-02-01",
        "2022-02-02",
        "2022-02-02",
        "2022-02-02",
        "2022-02-02",
        "2022-02-02",
        "2022-02-03",
        "2022-02-03",
        "2022-02-04",
        "2022-02-04",
        "2022-02-04",
        "2022-02-04",
        "2022-02-17",
        "2022-02-17",
        "2022-02-17",
        "2022-02-22",
        "2022-02-23",
        "2022-02-23",
        "2022-02-26",
        "2022-03-03",
        "2022-03-03",
        "2022-03-03",
        "2022-03-06",
        "2022-03-07",
        "2022-03-08",
        "2022-03-09",
        "2022-03-09",
        "2022-03-09",
        "2022-03-10",
        "2022-03-10",
        "2022-03-11",
        "2022-03-12",
        "2022-03-15",
        "2022-03-15",
        "2022-03-15",
        "2022-03-16",
        "2022-03-16",
        "2022-03-16",
        "2022-03-16",
        "2022-03-17",
        "2022-03-17",
        "2022-03-17",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-21",
        "2022-03-21",
        "2022-03-22",
        "2022-03-24",
        "2022-03-28",
        "2022-03-28",
        "2022-03-29",
        "2022-03-29",
        "2022-03-30",
        "2022-03-31",
        "2022-04-01",
        "2022-04-05",
        "2022-04-06",
        "2022-04-06",
        "2022-04-07",
        "2022-04-07",
        "2022-04-08",
        "2022-04-10",
        "2022-04-11",
        "2022-04-11",
        "2022-04-11",
        "2022-04-12",
        "2022-04-12",
        "2022-04-12",
        "2022-04-13",
        "2022-04-14",
        "2022-04-15",
        "2022-04-19",
        "2022-04-19",
        "2022-04-19",
        "2022-04-20",
        "2022-04-21",
        "2022-04-22",
        "2022-04-23",
        "2022-04-25",
        "2022-04-26",
        "2022-04-27",
        "2022-04-28",
        "2022-04-28",
        "2022-05-02",
        "2022-05-02",
        "2022-05-03",
        "2022-05-04",
        "2022-05-04",
        "2022-05-04",
        "2022-05-04",
        "2022-05-05",
        "2022-05-05",
        "2022-05-06",
        "2022-05-07",
        "2022-05-09",
        "2022-05-10",
        "2022-05-10",
        "2022-05-11",
        "2022-05-12",
        "2022-05-12",
        "2022-05-14",
        "2022-05-16",
        "2022-05-16",
        "2022-05-16",
        "2022-05-16",
        "2022-05-17",
        "2022-05-17",
        "2022-05-19",
        "2022-05-20",
        "2022-05-20",
        "2022-05-23",
        "2022-05-24",
        "2022-05-27",
        "2022-05-31",
        "2022-06-01",
        "2022-06-02",
        "2022-06-03",
        "2022-06-07",
        "2022-06-07",
        "2022-06-07",
        "2022-06-07",
        "2022-06-07",
        "2022-06-08",
        "2022-06-08",
        "2022-06-08",
        "2022-06-09",
        "2022-06-10",
        "2022-06-10",
        "2022-06-11",
        "2022-06-11",
        "2022-06-13",
        "2022-06-13",
        "2022-06-14",
        "2022-06-14",
        "2022-06-16",
        "2022-06-16",
        "2022-06-16",
        "2022-06-16",
        "2022-06-16",
        "2022-06-16",
        "2022-06-17",
        "2022-06-17",
        "2022-06-20",
        "2022-06-22",
        "2022-06-22",
        "2022-06-22",
        "2022-06-23",
        "2022-06-26",
        "2022-06-29",
        "2022-07-01",
        "2022-07-01",
        "2022-07-04",
        "2022-07-06",
        "2022-07-07",
        "2022-07-07",
        "2022-07-11",
        "2022-07-11",
        "2022-07-12",
        "2022-07-13",
        "2022-07-13",
        "2022-07-13",
        "2022-07-13",
        "2022-07-14",
        "2022-07-14",
        "2022-07-19",
        "2022-07-19",
        "2022-07-19",
        "2022-07-19",
        "2022-07-19",
        "2022-07-20",
        "2022-07-20",
        "2022-07-21"
      ],
      "Move In Date (RRH/PSH Only)": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "Exit Date": [
        "2014-10-21",
        "2014-10-28",
        "2018-02-01",
        "2014-11-19",
        "2014-12-01",
        "2019-05-07",
        "2016-10-25",
        "2015-01-28",
        "2016-12-07",
        "2015-03-18",
        "2015-04-03",
        "2018-05-09",
        "2018-04-20",
        "2015-05-01",
        "2015-05-05",
        "2015-06-03",
        "2015-08-12",
        "2015-08-13",
        "2015-08-18",
        "2017-06-08",
        "2015-08-28",
        "2018-06-19",
        "2015-09-24",
        "2015-10-29",
        "2017-04-19",
        "2016-01-04",
        "2018-04-20",
        "2017-04-28",
        "2018-03-04",
        "2016-03-03",
        "2016-03-17",
        "2018-03-01",
        "2018-02-15",
        "2017-08-17",
        "2018-07-19",
        "2018-07-19",
        "2018-07-19",
        "2017-02-11",
        "2017-02-11",
        "2017-02-11",
        "2017-02-11",
        "2016-08-02",
        "2018-11-15",
        "2019-07-05",
        "2017-06-02",
        "2018-05-09",
        "2017-02-08",
        "2018-02-21",
        "2017-07-25",
        "2018-06-05",
        "2018-06-05",
        "2017-03-10",
        "2018-10-18",
        "2017-05-18",
        "2017-04-14",
        "2017-04-26",
        "2018-09-06",
        "2017-05-17",
        "2017-05-17",
        "2017-05-23",
        "2017-08-08",
        "2017-08-16",
        "2018-01-20",
        "2017-06-13",
        "2017-06-13",
        "2018-11-14",
        "2017-06-22",
        "2017-06-29",
        "2017-07-14",
        "2017-07-19",
        "2017-07-23",
        "2018-12-11",
        "2017-07-26",
        "2018-06-14",
        "2017-11-10",
        "2017-11-10",
        "2017-11-09",
        "2017-08-17",
        "2017-08-29",
        "2017-09-06",
        "2017-09-08",
        "2017-09-15",
        "2017-09-28",
        "2018-06-04",
        "2017-10-12",
        "2017-10-12",
        "2017-11-15",
        "2017-11-03",
        "2017-11-01",
        "2017-11-15",
        "2018-11-13",
        "2018-11-29",
        "2018-11-29",
        "2018-11-29",
        "2018-10-01",
        "2017-12-06",
        "2017-12-14",
        "2018-12-10",
        "2018-04-02",
        "2017-12-27",
        "2018-08-30",
        "2018-01-09",
        "2018-02-05",
        "2018-03-27",
        "2018-03-28",
        "2018-04-04",
        "2018-01-22",
        "2018-02-13",
        "2018-01-29",
        "2018-03-20",
        "2018-01-31",
        "2018-02-01",
        "2018-02-01",
        "2018-02-02",
        "2018-02-05",
        "2018-02-08",
        "2018-02-20",
        "2018-02-22",
        "2018-02-28",
        "2018-03-01",
        "2018-08-01",
        "2018-03-06",
        "2018-03-07",
        "2018-03-08",
        "2018-03-19",
        "2018-03-21",
        "2018-04-13",
        "2018-03-29",
        "2018-04-12",
        "2018-04-19",
        "2018-05-08",
        "2018-05-15",
        "2018-05-24",
        "2018-05-25",
        "2018-06-06",
        "2018-06-08",
        "2018-06-11",
        "2018-06-21",
        "2018-07-06",
        "2018-06-29",
        "2018-07-05",
        "2018-07-12",
        "2018-07-13",
        "2018-07-13",
        "2018-07-13",
        "2018-07-20",
        "2018-07-20",
        "2018-08-07",
        "2018-08-07",
        "2018-08-09",
        "2018-08-28",
        "2018-08-28",
        "2018-09-10",
        "2018-09-12",
        "2018-11-15",
        "2018-09-27",
        "2018-10-04",
        "2018-10-08",
        "2018-10-25",
        "2019-04-18",
        "2018-11-13",
        "2018-12-04",
        "2018-12-04",
        "2018-12-07",
        "2018-12-06",
        "2018-12-06",
        "2020-04-18",
        "2020-05-22",
        "2020-07-08",
        "2020-11-02",
        "2020-09-28",
        "2021-01-27",
        "2020-09-29",
        "2020-11-24",
        "2021-03-10",
        "2020-12-14",
        "2020-10-07",
        "2020-10-06",
        "2021-04-09",
        "2020-10-06",
        "2021-02-25",
        "2020-10-12",
        "2021-03-30",
        "2020-10-14",
        "2020-10-15",
        "2020-11-06",
        "2020-10-21",
        "2020-10-23",
        "2020-10-27",
        "2020-10-30",
        "2022-01-19",
        "2021-01-12",
        "2022-01-19",
        "2020-11-06",
        "2020-11-06",
        "2020-11-09",
        "2020-11-10",
        "2020-11-10",
        "2021-02-01",
        "2020-11-11",
        "2021-03-21",
        "2020-11-19",
        "2020-11-12",
        "2021-07-16",
        "2021-06-15",
        "2021-05-03",
        "2020-12-03",
        "2020-12-01",
        "2020-12-03",
        "2020-12-04",
        "2021-03-10",
        "2020-12-07",
        "2021-04-22",
        "2020-12-09",
        "2020-12-10",
        "2021-03-31",
        "2020-12-22",
        "2020-12-24",
        "2021-01-04",
        "2021-01-06",
        "2021-01-08",
        "2022-01-31",
        "2021-01-10",
        "2021-05-07",
        "2021-02-08",
        "2021-01-28",
        "2021-02-25",
        "2021-02-01",
        "2021-01-13",
        "2021-01-13",
        "2021-03-19",
        "2021-02-03",
        "2021-01-18",
        "2021-01-19",
        "2021-01-19",
        "2021-01-20",
        "2021-09-09",
        "2021-01-26",
        "2021-01-27",
        "2021-03-08",
        "2021-10-13",
        "2021-01-28",
        "2021-02-18",
        "2021-01-28",
        "2021-01-29",
        "2021-03-17",
        "2021-03-05",
        "2021-03-26",
        "2021-04-15",
        "2021-02-04",
        "2021-02-04",
        "2021-03-31",
        "2021-05-03",
        "2021-03-31",
        "2021-08-13",
        "2021-02-08",
        "2021-02-10",
        "2021-02-10",
        "2021-02-10",
        "2021-02-11",
        "2021-03-08",
        "2021-03-04",
        "2021-04-02",
        "2021-05-14",
        "2021-03-26",
        "2021-02-19",
        "2021-03-09",
        "2021-02-24",
        "2021-02-24",
        "2021-06-18",
        "2021-06-18",
        "2021-06-18",
        "2021-02-25",
        "2021-04-19",
        "2021-03-31",
        "2021-05-28",
        "2021-03-31",
        "2021-03-26",
        "2021-03-12",
        "2021-08-04",
        "2021-04-02",
        "2021-04-24",
        "2021-03-08",
        "2021-03-31",
        "2021-03-22",
        "2021-03-10",
        "2021-03-11",
        "2021-03-11",
        "2022-03-10",
        "2022-03-10",
        "2021-03-26",
        "2021-04-06",
        "2021-03-22",
        "2021-12-31",
        "2021-03-16",
        "2021-03-26",
        "2021-03-31",
        "2021-11-04",
        "2021-04-13",
        "2021-03-22",
        "2021-03-22",
        "2021-03-22",
        "2021-03-23",
        "2021-03-24",
        "2021-05-17",
        "2021-03-31",
        "2021-04-06",
        "2021-04-02",
        "2021-05-01",
        "2021-04-11",
        "2021-05-12",
        "2021-04-12",
        "2021-04-13",
        "2021-04-20",
        "2021-12-16",
        "2021-04-23",
        "2021-04-23",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-26",
        "2021-04-29",
        "2021-04-27",
        "2021-06-22",
        "2021-06-07",
        "2021-06-07",
        "2021-05-12",
        "2021-05-01",
        "2021-08-02",
        "2021-08-26",
        "2021-05-05",
        "2021-05-05",
        "2021-05-12",
        "2021-05-29",
        "2022-01-18",
        "2021-07-29",
        "2021-06-01",
        "2021-06-01",
        "2021-06-01",
        "2021-05-20",
        "2021-07-07",
        "2021-05-21",
        "2021-11-04",
        "2022-02-16",
        "2021-05-27",
        "2021-06-01",
        "2021-07-08",
        "2021-06-02",
        "2021-06-08",
        "2021-06-08",
        "2021-06-09",
        "2021-06-15",
        "2021-07-13",
        "2021-07-21",
        "2021-06-16",
        "2021-06-17",
        "2021-06-21",
        "2021-06-22",
        "2021-09-02",
        "2021-06-26",
        "2021-06-23",
        "2021-06-23",
        "2021-08-21",
        "2021-10-05",
        "2021-07-02",
        "2021-07-22",
        "2021-09-23",
        "2021-06-29",
        "2021-06-29",
        "2021-07-04",
        "2021-06-29",
        "2021-06-29",
        "2021-06-29",
        "2021-06-30",
        "2021-07-14",
        "2021-07-01",
        "2021-07-02",
        "2021-07-06",
        "2021-10-06",
        "2021-10-05",
        "2021-07-09",
        "2021-07-08",
        "2021-07-09",
        "2021-07-09",
        "2021-07-10",
        "2021-07-12",
        "2021-07-12",
        "2021-07-13",
        "2021-07-13",
        "2021-07-13",
        "2021-07-13",
        "2021-09-13",
        "2021-09-13",
        "2021-09-13",
        "2021-07-16",
        "2021-07-15",
        "2021-09-19",
        "2021-07-24",
        "2021-07-22",
        "2021-07-22",
        "2021-07-19",
        "2021-07-19",
        "2021-07-19",
        "2021-07-19",
        "2021-09-07",
        "2021-09-11",
        "2021-08-21",
        "2021-12-28",
        "2021-07-30",
        "2021-07-23",
        "2021-08-09",
        "2021-11-19",
        "2021-07-26",
        "2022-02-02",
        "2021-07-30",
        "2021-10-06",
        "2021-07-30",
        "2021-07-31",
        "2021-08-03",
        "2021-08-04",
        "2021-08-05",
        "2021-08-05",
        "2021-10-18",
        "2021-10-18",
        "2021-08-07",
        "2021-08-06",
        "2021-08-10",
        "2021-08-13",
        "2021-08-13",
        "2021-08-13",
        "2021-08-14",
        "2021-08-14",
        "2021-08-14",
        "2021-08-14",
        "2021-08-14",
        "2021-08-18",
        "2021-08-18",
        "2021-08-18",
        "2021-08-19",
        "2021-08-20",
        "2022-01-04",
        "2021-09-24",
        "2021-08-23",
        "2021-08-24",
        "2021-08-24",
        "2021-08-30",
        "2021-10-15",
        "2021-09-03",
        "2021-09-04",
        "2021-09-06",
        "2021-09-08",
        "2021-10-18",
        "2021-10-18",
        "2021-11-10",
        "2021-09-10",
        "2021-09-13",
        "2021-10-29",
        "2021-10-29",
        "2021-10-29",
        "2022-05-24",
        "2021-11-04",
        "2021-11-04",
        "2021-09-20",
        "2021-10-02",
        "2021-10-07",
        "2022-01-04",
        "2021-11-05",
        "2021-09-24",
        "2021-11-01",
        "2021-11-01",
        "2021-10-04",
        "2021-09-28",
        "2021-09-28",
        "2021-09-30",
        "2021-10-08",
        "2021-10-08",
        "2021-10-08",
        "2021-10-09",
        "2021-10-04",
        "2021-10-05",
        "2021-10-06",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-07",
        "2021-10-08",
        "2022-03-14",
        "2021-10-11",
        "2021-10-12",
        "2021-10-14",
        "2021-11-23",
        "2022-01-14",
        "2022-01-14",
        "2022-01-14",
        "2022-01-14",
        "2022-01-14",
        "2021-10-28",
        "2022-02-11",
        "2021-10-18",
        "2021-10-19",
        "2021-10-20",
        "2021-10-20",
        "2021-10-20",
        "2021-10-20",
        "2021-10-25",
        "2021-10-26",
        "2021-12-09",
        "2021-12-16",
        "2021-10-28",
        "2021-10-28",
        "2021-10-30",
        "2021-10-29",
        "2021-10-30",
        "2021-11-01",
        "2022-02-01",
        "2022-01-26",
        "2022-01-11",
        "2021-11-05",
        "2021-12-10",
        "2021-11-08",
        "2021-11-24",
        "2022-03-10",
        "2022-01-13",
        "2021-11-11",
        "2021-11-12",
        "2022-01-12",
        "2021-11-16",
        "2022-02-09",
        "2021-11-23",
        "2021-11-18",
        "2021-12-13",
        "2021-11-21",
        "2021-11-22",
        "2021-12-21",
        "2021-11-23",
        "2021-11-23",
        "2021-11-23",
        "2021-11-23",
        "2022-02-14",
        "2021-11-30",
        "2022-02-25",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-11-30",
        "2021-12-01",
        "2021-12-01",
        null,
        "2022-04-20",
        "2021-12-03",
        "2021-12-06",
        "2021-12-31",
        "2022-03-03",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-07",
        "2021-12-08",
        "2021-12-10",
        "2022-04-14",
        "2021-12-13",
        "2021-12-15",
        "2021-12-16",
        "2021-12-16",
        "2021-12-20",
        "2021-12-20",
        "2021-12-20",
        "2022-07-11",
        "2022-03-04",
        "2022-01-08",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-22",
        "2021-12-27",
        "2021-12-27",
        "2021-12-27",
        "2021-12-29",
        "2022-03-28",
        "2021-12-29",
        "2022-02-01",
        "2022-04-14",
        "2022-01-05",
        "2022-01-06",
        "2022-01-07",
        "2022-03-21",
        "2022-01-30",
        "2022-01-11",
        "2022-05-04",
        "2022-03-04",
        "2022-01-27",
        "2022-04-20",
        "2022-03-10",
        "2022-01-28",
        "2022-02-02",
        "2022-03-22",
        "2022-01-26",
        "2022-01-26",
        "2022-01-26",
        "2022-01-27",
        "2022-01-27",
        "2022-02-01",
        "2022-02-11",
        "2022-02-04",
        "2022-03-02",
        "2022-04-10",
        "2022-02-01",
        "2022-02-04",
        "2022-02-02",
        "2022-02-02",
        "2022-02-02",
        "2022-02-02",
        "2022-02-03",
        "2022-04-14",
        "2022-02-04",
        null,
        "2022-02-04",
        "2022-02-04",
        "2022-04-12",
        "2022-02-17",
        "2022-02-17",
        "2022-02-22",
        null,
        "2022-03-02",
        "2022-03-01",
        "2022-05-04",
        "2022-04-05",
        "2022-03-08",
        "2022-04-20",
        "2022-04-10",
        "2022-03-08",
        "2022-03-11",
        "2022-04-12",
        "2022-03-18",
        "2022-04-12",
        "2022-03-10",
        "2022-03-11",
        "2022-03-12",
        "2022-03-15",
        "2022-04-06",
        "2022-05-27",
        "2022-03-16",
        "2022-03-16",
        null,
        null,
        "2022-05-01",
        "2022-03-17",
        "2022-05-30",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-03-18",
        "2022-05-16",
        null,
        "2022-03-21",
        null,
        "2022-03-24",
        "2022-04-14",
        "2022-04-06",
        "2022-03-29",
        "2022-03-29",
        "2022-03-30",
        "2022-05-07",
        "2022-04-01",
        null,
        "2022-04-06",
        "2022-04-06",
        "2022-05-09",
        "2022-04-09",
        "2022-04-08",
        "2022-04-10",
        "2022-04-14",
        "2022-04-22",
        "2022-04-11",
        "2022-04-12",
        "2022-04-18",
        "2022-04-15",
        null,
        "2022-04-14",
        "2022-04-15",
        "2022-04-19",
        "2022-04-20",
        "2022-04-20",
        "2022-04-20",
        "2022-04-21",
        null,
        null,
        "2022-05-04",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "2022-05-04",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "2022-06-01",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "2022-07-13",
        "2022-07-13",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "2022-07-09",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "2022-06-21",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "Status": [
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (490 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (426 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (407 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (386 days)",
        "Currently in project (386 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (381 days)",
        "Exited project",
        "Currently in project (380 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (366 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (358 days)",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Exited project",
        "Currently in project (349 days)",
        "Currently in project (348 days)",
        "Exited project",
        "Currently in project (345 days)",
        "Currently in project (344 days)",
        "Currently in project (343 days)",
        "Currently in project (343 days)",
        "Currently in project (339 days)",
        "Currently in project (339 days)",
        "Currently in project (338 days)",
        "Exited project",
        "Currently in project (337 days)",
        "Currently in project (337 days)",
        "Currently in project (337 days)",
        "Currently in project (336 days)",
        "Currently in project (336 days)",
        "Currently in project (335 days)",
        "Currently in project (334 days)",
        "Currently in project (332 days)",
        "Currently in project (331 days)",
        "Currently in project (331 days)",
        "Currently in project (330 days)",
        "Currently in project (329 days)",
        "Exited project",
        "Currently in project (327 days)",
        "Currently in project (325 days)",
        "Currently in project (325 days)",
        "Currently in project (325 days)",
        "Currently in project (325 days)",
        "Currently in project (324 days)",
        "Currently in project (324 days)",
        "Currently in project (322 days)",
        "Exited project",
        "Exited project",
        "Currently in project (318 days)",
        "Currently in project (317 days)",
        "Currently in project (314 days)",
        "Currently in project (310 days)",
        "Currently in project (309 days)",
        "Currently in project (308 days)",
        "Currently in project (307 days)",
        "Currently in project (303 days)",
        "Currently in project (303 days)",
        "Currently in project (303 days)",
        "Currently in project (303 days)",
        "Currently in project (303 days)",
        "Currently in project (302 days)",
        "Currently in project (302 days)",
        "Currently in project (302 days)",
        "Currently in project (301 days)",
        "Currently in project (300 days)",
        "Exited project",
        "Currently in project (299 days)",
        "Currently in project (299 days)",
        "Currently in project (297 days)",
        "Currently in project (297 days)",
        "Currently in project (296 days)",
        "Currently in project (296 days)",
        "Currently in project (294 days)",
        "Currently in project (294 days)",
        "Currently in project (294 days)",
        "Currently in project (294 days)",
        "Currently in project (294 days)",
        "Currently in project (294 days)",
        "Currently in project (293 days)",
        "Currently in project (293 days)",
        "Exited project",
        "Currently in project (288 days)",
        "Currently in project (288 days)",
        "Currently in project (288 days)",
        "Currently in project (287 days)",
        "Currently in project (284 days)",
        "Currently in project (281 days)",
        "Currently in project (279 days)",
        "Currently in project (279 days)",
        "Currently in project (276 days)",
        "Currently in project (274 days)",
        "Currently in project (273 days)",
        "Currently in project (273 days)",
        "Currently in project (269 days)",
        "Currently in project (269 days)",
        "Currently in project (268 days)",
        "Currently in project (267 days)",
        "Currently in project (267 days)",
        "Currently in project (267 days)",
        "Currently in project (267 days)",
        "Currently in project (266 days)",
        "Currently in project (266 days)",
        "Currently in project (261 days)",
        "Currently in project (261 days)",
        "Currently in project (261 days)",
        "Currently in project (261 days)",
        "Currently in project (261 days)",
        "Currently in project (260 days)",
        "Currently in project (260 days)",
        "Currently in project (259 days)"
      ]
    },
    "clientCountSummary": {
      "Status": [
        "Currently in project",
        "Exited project"
      ],
      "Clients": [
        98,
        448
      ],
      "Households": [
        86,
        607
      ]
    }
  }
}
